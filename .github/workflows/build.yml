name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  IMAGE_NAME: go-project
  TAR_NAME: go-project.tar
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  S3_REGION: eu-north-1
  S3_BUCKET: silas-s3-bucket

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Get version
        run: echo "IMAGE_VERSION=$(cat VERSION)" >> $GITHUB_ENV
      - name: Build the Docker image
        run: docker build --tag $IMAGE_NAME:$IMAGE_VERSION .
      - name: Save the Docker image
        run: docker save $IMAGE_NAME:$IMAGE_VERSION -o $TAR_NAME
      - name: Define AWS_PATH
        run: echo "AWS_PATH=container-registry/${{ env.IMAGE_NAME }}/v${{ env.IMAGE_VERSION }}.tar" >> $GITHUB_ENV
      - name: Check if the version already exists in S3
        run: |
          response=$( curl --fail --silent --show-error -X GET --user "${AWS_ACCESS_KEY_ID}:${AWS_SECRET_ACCESS_KEY}" --aws-sigv4 "aws:amz:${S3_REGION}:s3" --output /dev/null https://${S3_BUCKET}.s3.${S3_REGION}.amazonaws.com/$AWS_PATH 2>&1 )
          if [[ $response == *"404"* ]]; then
            echo "Version not found in S3";
            exit 0;
          else
            echo "Version already exists in S3";
            exit 1;
          fi
      - name: Upload the Docker image to S3
        env:
          AWS_PATH: container-registry/${{ env.IMAGE_NAME }}/v${{ env.IMAGE_VERSION }}.tar
        run: curl --fail-with-body -X PUT --user "${AWS_ACCESS_KEY_ID}:${AWS_SECRET_ACCESS_KEY}" --aws-sigv4 "aws:amz:${S3_REGION}:s3" --upload-file ${TAR_NAME} https://${S3_BUCKET}.s3.${S3_REGION}.amazonaws.com/$AWS_PATH
